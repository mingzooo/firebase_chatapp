{"version":3,"sources":["firebase.js","components/Spinner.js","pages/Signup.js","pages/Login.js","components/chats/ChatCard.js","pages/ChatRoom.js","pages/ChatRoomCreate.js","pages/Test.js","pages/ChatRoomWithImmer.js","Routes.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","Spinner","show","className","Signup","history","useHistory","useState","email","setEmail","password","setPassword","nickName","setNickName","loading","setLoading","setLoginStatus","setUid","useEffect","auth","onAuthStateChanged","user","uid","currentUser","push","onChange","evt","target","value","placeholder","type","onClick","length","alert","createUserWithEmailAndPassword","then","console","log","collection","add","age","created","Timestamp","now","seconds","ref","catch","error","code","message","Login","initLoaded","setInitLoaded","loginStatus","signOut","signInWithEmailAndPassword","errorCode","ChatCard","React","memo","chat","users","index","onEmojiClick","EmojiButton","emojiKey","emojiValue","emojiObj","extraClassName","includes","e","id","src","who","content","emoji","renderEmojiSection","prevProps","nextProps","Chats","chats","map","ChatRoom","props","setChats","chatContent","setChatContent","setUsers","channelId","useParams","messagesEndRef","useRef","modifyCandidate","setModifyCandidate","window","location","current","scrollIntoView","behavior","scrollToBottom","doc","orderBy","get","snapshot","data","docs","onSnapshot","docChanges","forEach","change","newEntry","chatRecords","useMemo","copied","findIndex","uids","filter","self","indexOf","usersRef","arr","where","querySnapshot","style","position","height","overflowY","paddingBottom","chatId","chatRef","update","float","clear","bottom","width","backgroundColor","onTextareaChange","ChatRoomCreate","channel","setChannel","Test","cnt","setCnt","prev","ChatRoomWithImmer","useImmer","draft","el","Routes","exact","path","component","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aaa05fef.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyAEqoY1owwwhvHoy5zTVZ3sJWryRtY4KSA\",\n  authDomain: \"fb-chatapp1999.firebaseapp.com\",\n  projectId: \"fb-chatapp1999\",\n  storageBucket: \"fb-chatapp1999.appspot.com\",\n  messagingSenderId: \"23101647682\",\n  appId: \"1:23101647682:web:1885de1ef6cc789324f6db\",\n  measurementId: \"G-DT4X9WTE43\"\n});\n\nconst db = firebaseApp.firestore();\nexport { db, firebaseApp, firebase };\n","import React from 'react';\n\nconst Spinner = ({show}) => {\n  return <div className={`posFx vw100 vh100 aic jcc ${show ? \"flex\":\"dNone\"}`}>\n    <div className=\"spinner loader\">\n    </div>\n  </div>\n}\n\nexport default Spinner\n\n","import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { useHistory } from 'react-router-dom';\nimport { db, firebaseApp, firebase } from '../firebase';\nimport Spinner from '../components/Spinner';\n\nconst Signup = () => {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nickName, setNickName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [loginStatus, setLoginStatus] = useState(false);\n  const [uid, setUid] = useState(\"\");\n\n  const signup = () => {\n    if (email.length < 3) {\n      alert('!!!');\n      return\n    }\n\n    setLoading(true);\n    firebaseApp.auth().createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        const uid = (firebaseApp.auth().currentUser || {}).uid\n        console.log(uid); //tngyNVDEKdY6WqpLVTb3BEbTIfZ2\n\n        if (uid) {\n          db\n            .collection('google')\n            .add({\n              uid: uid,\n              nickName: nickName,\n              age: 20,\n              email: email,\n              created: firebase.firestore.Timestamp.now().seconds\n            })\n            .then((ref) => {\n              setLoginStatus(true);\n              setUid(uid);\n              setEmail(\"\");\n              setPassword(\"\");\n              history.push('/createChat')\n              setLoading(false);\n            })\n        } else {\n          alert('error');\n        }\n      })\n      .catch((error) => {\n        setLoading(false);\n        var errorCode = error.code;\n        var errorMessage = error.message;\n      });\n  }\n\n  useEffect(() => {\n    firebaseApp.auth().onAuthStateChanged((user) => {\n      const uid = (firebaseApp.auth().currentUser || {}).uid\n      if (uid) {\n        setLoginStatus(true);\n        setUid(uid);\n        history.push('/app')\n      } else {\n      }\n    })\n  }, [])\n\n  return (\n    <div>\n      <Spinner show={loading} />\n      <div className=\"flex aic jcc vh100\">\n        <div className=\"w400\">\n          <div className=\"fdr aic pt16\">\n            <div className=\"w100\">\n              <span>NickName</span>\n            </div>\n            <input onChange={evt => { setNickName(evt.target.value) }}\n              className=\"default_input f1\"\n              placeholder=\"nickname\"\n              value={nickName}\n            />\n          </div>\n\n          <div className=\"fdr aic pt16\">\n            <div className=\"w100\">\n              <span>email</span>\n            </div>\n            <input onChange={evt => { setEmail(evt.target.value) }}\n              className=\"default_input f1\"\n              placeholder=\"email\"\n              value={email}\n            />\n          </div>\n          <div className=\"fdr aic pt16\">\n            <div className=\"w100\">\n              <span>password</span>\n            </div>\n            <input onChange={evt => { setPassword(evt.target.value) }}\n              className=\"default_input f1\"\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n            />\n          </div>\n          <div className=\"jcc flex pt16 pb16\">\n          </div>\n          <div onClick={signup} className=\"btn btn-success btn-fit\">\n            Signup\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { useHistory } from 'react-router-dom';\nimport { firebaseApp } from '../firebase';\nimport Spinner from '../components/Spinner';\n\nconst Login = () => {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [initLoaded, setInitLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loginStatus, setLoginStatus] = useState(false);\n\n  const login = () => {\n    if (email.length < 3) {\n      alert('too short');\n      return\n    }\n\n    setLoading(true);\n\n    firebaseApp.auth().signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        const uid = (firebaseApp.auth().currentUser || {}).uid\n\n        if (uid) {\n          setLoginStatus(true);\n          setEmail(\"\");\n          setPassword(\"\");\n          history.push('/createChat')\n          setLoading(false);\n        } else {\n          alert('error');\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        setLoading(false);\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (errorCode === \"auth/user-not-found\") {\n          alert('가입하세요');\n        }\n      });\n  }\n\n  const logout = () => {\n    firebaseApp.auth().signOut()\n    setLoginStatus(false);\n  }\n\n  useEffect(() => {\n    firebaseApp.auth().onAuthStateChanged((user) => {\n      setInitLoaded(true)\n      const uid = (firebaseApp.auth().currentUser || {}).uid\n      if (uid) {\n        setLoginStatus(true);\n        history.push('/createChat')\n      } else {\n      }\n    })\n  }, [])\n\n  const goToSignup = () => {\n    history.push(\"/signup\")\n  }\n\n  if (!initLoaded) {\n    return <></>\n  }\n\n  return (\n    <div >\n      <Spinner show={loading} />\n      {\n        loginStatus ?\n          <>\n            <div className=\"btn btn-danger\" onClick={evt => { logout() }}>logout</div>\n          </>\n          :\n          <>\n            <div className=\"flex aic jcc vh100\">\n              <div className=\"w400\">\n                <div className=\"fdr aic\">\n                  <div className=\"w100\">\n                    <span>email</span>\n                  </div>\n                  <input onChange={evt => { setEmail(evt.target.value) }}\n                    className=\"default_input f1\"\n                    placeholder=\"email\"\n                    value={email}\n                  />\n                </div>\n                <div className=\"fdr aic pt16\">\n                  <div className=\"w100\">\n                    <span>password</span>\n                  </div>\n                  <input onChange={evt => { setPassword(evt.target.value) }}\n                    className=\"default_input f1\"\n                    placeholder=\"password\"\n                    type=\"password\"\n                    value={password}\n                  />\n                </div>\n                <div className=\"pt16\">\n                  <div className=\"btn btn-success btn-fit\" onClick={evt => { login() }}>Login</div>\n                </div>\n                <div className=\"jcc flex pt16 pb16\">\n                  <span>or</span>\n                </div>\n                <div onClick={goToSignup} className=\"btn btn-default btn-fit\">\n                  Signup\n              </div>\n              </div>\n            </div>\n          </>\n      }\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\n\nconst ChatCard = React.memo(({ chat, users, index, uid, onEmojiClick }) => {\n  const who = () => {\n    const user = users[chat.uid]\n    if (user) {\n      return (user.nickName)\n      // 닉네임 제대로 안뜬다 왜지? 제대로 연결한것같은데?\n    } else {\n      return \"익명\"\n    }\n  }\n\n  const renderEmojiSection = () => {\n    const emojiObj = chat.emoji\n    return <>\n      <div className=\"fdr\">\n        <EmojiButton emojiKey={'1'} emojiValue={\"😎\"} emojiObj={emojiObj} />\n        <EmojiButton emojiKey={'2'} emojiValue={\"🤣\"} emojiObj={emojiObj} />\n      </div>\n    </>\n  }\n\n  const EmojiButton = ({ emojiKey, emojiValue, emojiObj }) => {\n    let extraClassName = \"\"\n    if (emojiObj && emojiObj[emojiKey]) {\n      if (emojiObj[emojiKey].includes(uid)) {\n        extraClassName = \"active\"\n      }\n    }\n\n    return <div>\n      <div onClick={e => onEmojiClick(emojiKey, chat.id)} className={`emojiRec flex fdr aic ${extraClassName}`}>\n        <span>{emojiValue}</span>\n        <span>\n          {emojiObj && emojiObj[emojiKey] &&\n            <div>{emojiObj[emojiKey].length}</div>\n          }\n        </span>\n      </div>\n    </div>\n  }\n\n  return <div className=\"flex fdr pb16 chat_card\" key={index}>\n    <div className=\"w40 h40 flex aic jcc\">\n      <img src=\"http://www.gravatar.com/avatar/3b3be63a4c2a439b013787725dfce802?d=identicon\"\n        className=\"w30 h30\" />\n    </div>\n    <div className=\"pl16 f1\">\n      <div>\n        <span className=\"bold\">{who()}</span>  {/* 문제가 없는것같은데 왜 닉네임이 안뜨지...? */}\n        {/* <span className=\"fs color_gray pl8\">-시간</span> */}\n      </div>\n      <div className=\"pt8\">\n        {chat.content}\n      </div>\n      {renderEmojiSection()}\n    </div>\n  </div>\n}, (prevProps, nextProps) => {\n  // console.log('chat card');\n  return (prevProps.chat === nextProps.chat) && (prevProps.users === nextProps.users)\n});\n\nexport default ChatCard","import React, { useEffect, useState, useRef, useMemo } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { db, firebaseApp, firebase } from '../firebase';\nimport { BiSend, BiLogOut, BiCommentAdd } from \"react-icons/bi\";\nimport ChatCard from '../components/chats/ChatCard';\n\nconst Chats = React.memo(({ chats, users, uid, onEmojiClick }) => {\n  return <>\n    {\n      chats.map((chat) => {\n        return <div key={chat.id}>\n          <ChatCard chat={chat} users={users} uid={uid} index={chat.id} onEmojiClick={onEmojiClick} />\n        </div>\n      })\n    }</>\n}, (prevProps, nextProps) => {\n  return (prevProps.chats === nextProps.chats) &&\n    (prevProps.users === nextProps.users)\n})\n\nconst ChatRoom = (props) => {\n  const history = useHistory();\n  const [chats, setChats] = useState([]);\n  const [uid, setUid] = useState(\"\");\n  const [chatContent, setChatContent] = useState(\"\");\n\n\n  const [users, setUsers] = useState({});\n  const { channelId } = useParams();\n  const messagesEndRef = useRef(null)\n  const [modifyCandidate, setModifyCandidate] = useState(null);\n  const [text, setText] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n\n  const onClick = () => {\n    setSearch(text);\n  }\n\n  useEffect(() => {\n    firebaseApp.auth().onAuthStateChanged((user) => {\n      const uid = (firebaseApp.auth().currentUser || {}).uid\n      if (uid) {\n        setUid(uid);\n      } else {\n        window.location = \"/login\"\n      }\n    })\n  }, [])\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [chats]);\n\n  const addDocument = () => {\n    db\n      .collection('chat')\n      .doc('room_' + channelId)\n      .collection('messages')\n      .add({\n        uid: uid,\n        content: chatContent,\n        created: firebase.firestore.Timestamp.now().seconds\n      })\n      .then((ref) => {\n        setChatContent('');\n      })\n  }\n\n  useEffect(() => {\n    const chatRef = db.collection('chat').doc('room_' + channelId).collection('messages')\n    chatRef.orderBy(\"created\").get().then((snapshot) => {\n      const data = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setChats(data);\n    })\n  }, [])\n\n  useEffect(() => {\n    const chatRef = db.collection('chat').doc('room_' + channelId).collection('messages')\n    chatRef.orderBy(\"created\").onSnapshot((snapshot) => {\n      snapshot.docChanges().forEach((change) => {\n        if (change.type === \"added\") {\n          const newEntry = change.doc.data();\n          newEntry.id = change.doc.id\n          setModifyCandidate(newEntry);\n        }\n        if (change.type === \"modified\") {\n          const data = change.doc.data();\n          data.id = change.doc.id\n          setModifyCandidate(data);\n\n          //여기서 뭔가 바로 해야 하지 않을까 씁다잉.\n\n        }\n        if (change.type === \"removed\") {\n          console.log(\"remove message: \", change.doc.data());\n        }\n      });\n    });\n  }, [])\n\n  const chatRecords = useMemo(() => {\n    //this part will only be refreshed when modifyCandidate is set.\n    console.log('chat records use memo');\n    if (!modifyCandidate) {\n      return chats\n    }\n\n    const copied = [...chats];\n    const index = copied.findIndex(chat => chat.id === modifyCandidate.id)\n    if (index === -1) {\n      copied.push(modifyCandidate)\n    } else {\n      modifyCandidate.id = copied[index].id\n      copied[index] = modifyCandidate\n    }\n    setChats(copied)\n    return copied\n  }, [modifyCandidate])\n\n  useEffect(() => {\n    if (chats.length === 0) {\n      return;\n    }\n\n    function onlyUnique(value, index, self) {\n      return self.indexOf(value) === index;\n    }\n\n    const uids = chats.map((chat) => {\n      return chat.uid\n    }).filter(onlyUnique)\n\n    var usersRef = db.collection(\"user\");\n    var arr = {};\n    usersRef.where(\"uid\", 'in', uids).get().then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        arr[data.uid] = data;\n      })\n      setUsers(arr);\n    });\n  }, [chats])\n\n  const onTextareaChange = (evt) => {\n    setChatContent(evt.target.value);\n  }\n\n  const logout = () => {\n    firebaseApp.auth().signOut().then(() => {\n      history.push('/login');\n    })\n  }\n\n  const createChatRoom = () => {\n    history.push('/createChat');\n  }\n\n  const onEmojiClick = (emojiKey, chatId) => {\n    const chatRef = db.collection('chat').doc('room_' + channelId).collection('messages').doc(chatId)\n    chatRef.get().then(doc => {\n      const data = doc.data()\n      const emojiObj = { ...data.emoji };\n      let uids = emojiObj[emojiKey];\n\n      if (uids) {\n        if (uids.includes(uid)) {\n        } else {\n          uids.push(uid)\n        }\n      } else {\n        uids = [uid]\n      }\n\n      emojiObj[emojiKey] = uids\n      chatRef.update({\n        emoji: emojiObj\n      })\n    })\n  }\n\n  return <div style={{ position: 'relative' }} className=\"vh100\">\n    <div className=\"flex fdr vh100\">\n      <div className=\"w200 bg_black p16\">\n        <div className=\"color_white flex fdr aic cursor_pointer\" onClick={evt => { logout() }}>\n          <BiLogOut />\n          <span className=\"color_white pl8\">Logout</span>\n        </div>\n        <div className=\"color_white flex fdr aic cursor_pointer pt16\" onClick={evt => { createChatRoom() }}>\n          <BiCommentAdd />\n          <span className=\"color_white pl8\">Create New Channel</span>\n        </div>\n      </div>\n      <div className=\"f1 pl16 pt16 pr\">\n        <div style={{ height: 'calc(100% - 50px)', overflowY: 'scroll', paddingBottom: 50, }}>\n          <Chats chats={chatRecords} users={users} uid={uid} onEmojiClick={onEmojiClick} />\n          <div style={{ float: \"left\", clear: \"both\" }}\n            ref={messagesEndRef}>\n          </div>\n        </div>\n        <div className=\"posAb\" style={{ bottom: 16, width: 'calc(100% - 32px)', backgroundColor: '#dcdcdc', }}>\n          <div className=\"flex fdr\">\n            <textarea className=\"default_textarea f1 p8\"\n              placeholder=\"send a message to this channel\"\n              value={chatContent} onChange={evt => { onTextareaChange(evt) }}></textarea>\n            <div className=\"flex jce fdr\">\n              <div className=\"btn btn-success h40 w40\" onClick={evt => addDocument()}><BiSend /></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n}\n\nexport default ChatRoom","import React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {firebaseApp} from '../firebase';\nimport { BiSend, BiLogOut, BiCommentAdd} from \"react-icons/bi\";\n\nconst ChatRoomCreate = (props) => {\n  const history = useHistory();\n  const [channel, setChannel] = useState(\"\");\n\n  const onTextareaChange = (evt) => {\n    setChannel(evt.target.value);\n  }\n\n  const start = () => {\n    history.push(`/chat/${channel}`)\n  }\n\n  const logout = () => {\n    firebaseApp.auth().signOut()\n    history.push('/login');\n  }\n\n  return <div className=\"vw100 vh100 flex aic jcc\">\n    <div className=\"posFx top0 right0 p8\">\n      <div className=\"flex fdr aic cursor_pointer\" onClick={evt => {logout()}}>\n        <BiLogOut/> \n        <span>Logout</span>\n      </div>\n    </div>\n    <div className=\"w400 flex fdr aic\">\n      <input className=\"default_input f1\" placeholder=\"채널 이름을 입력하세요.\"\n        value={channel} onChange={evt => {onTextareaChange(evt)}}/>\n      <div className=\"btn btn-success ml16 w100\" onClick={evt => start()}>Start</div>\n    </div>\n  </div>\n}\n\nexport default ChatRoomCreate\n","import React, {useEffect, useState} from 'react';\n\n\nconst Test = () => {\n  const [cnt, setCnt] = useState(0);\n\n  const onClick = () => {\n    setCnt(prev => prev + 1);\n  }\n\n  useEffect(() => {\n    console.log('use effect!!!!');\n  }, 0)\n\n  return <>gogo\n\n    <br/>\n    {cnt}\n\n    <div onClick={onClick}>++</div>\n  \n  </>\n\n}\n\nexport default Test","import React, {useEffect, useState, useRef, useMemo} from 'react';\nimport {useParams, useHistory} from 'react-router-dom';\nimport {db, firebaseApp, firebase} from '../firebase';\nimport { BiSend, BiLogOut, BiCommentAdd} from \"react-icons/bi\";\nimport ChatCard from '../components/chats/ChatCard';\nimport {useImmer} from 'use-immer';\n\nconst Chats = React.memo(({chats, users, uid, onEmojiClick}) => {\n  return <>\n    {\n    chats.map((chat) => {\n      return <div key={chat.id}>\n        <ChatCard chat={chat} users={users} uid={uid} index={chat.id} onEmojiClick={onEmojiClick}/>\n      </div>\n    })\n  }</>\n}, (prevProps, nextProps) => {\n  return (prevProps.chats === nextProps.chats) && \n  (prevProps.users === nextProps.users)\n})\n\nconst ChatRoomWithImmer = (props) => {\n  const history = useHistory();\n  const [chats, setChats] = useImmer([]);\n  const [uid, setUid] = useState(\"\");\n  const [chatContent, setChatContent] = useState(\"\");\n  const [users, setUsers] = useState({});\n  const { channelId } = useParams();\n  const messagesEndRef = useRef(null)\n\n  useEffect(() => {\n    firebaseApp.auth().onAuthStateChanged((user) => {\n      const uid = (firebaseApp.auth().currentUser || {}).uid\n      if(uid){\n        setUid(uid);\n      }else{\n        window.location = \"/login\"\n      }\n    })\n  }, [])\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [chats]);\n\n  const addDocument = () => {\n    db\n      .collection('chat')\n      .doc('room_' + channelId)\n      .collection('messages')\n      .add({\n        uid: uid,\n        content: chatContent,\n        created: firebase.firestore.Timestamp.now().seconds\n      })\n      .then((ref) => {\n        setChatContent('');\n      })\n  }\n\n  useEffect(() => {\n    const chatRef = db.collection('chat').doc('room_' + channelId).collection('messages')\n    chatRef.orderBy(\"created\").onSnapshot((snapshot) => {\n      snapshot.docChanges().forEach((change) => {\n        if (change.type === \"added\") {\n          const newEntry = change.doc.data();\n          newEntry.id = change.doc.id\n          setChats(draft => {\n            draft.push(newEntry);\n          })\n        }\n        if (change.type === \"modified\") {\n          const data = change.doc.data();\n          data.id = change.doc.id\n          setChats(draft => {\n            const index = draft.findIndex(el => el.id === change.doc.id)\n            draft[index] = data\n          })          \n        }\n        if (change.type === \"removed\") {\n          console.log(\"remove message: \", change.doc.data());\n        }\n      });\n    });\n  }, [])\n\n  useEffect(() => {\n    if(chats.length === 0){\n      return ;\n    }\n\n    function onlyUnique(value, index, self) {\n      return self.indexOf(value) === index;\n    }\n\n    const uids = chats.map((chat) => {\n      return chat.uid\n    }).filter(onlyUnique)\n\n    var usersRef = db.collection(\"user\");\n    var arr = {};\n    usersRef.where(\"uid\", 'in',  uids).get().then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        arr[data.uid] = data;\n      })\n      setUsers(arr);\n    });  \n  }, [chats])\n\n  const onTextareaChange = (evt) => {\n    setChatContent(evt.target.value);\n  }\n\n  const logout = () => {\n    firebaseApp.auth().signOut().then(() => {\n      history.push('/login');\n    })\n  }\n\n  const createChatRoom = () => {\n    history.push('/createChat');\n  }\n\n  const onEmojiClick = (emojiKey, chatId) => {    \n    const chatRef = db.collection('chat').doc('room_' + channelId).collection('messages').doc(chatId)\n    chatRef.get().then(doc => {\n      const data = doc.data()      \n      const emojiObj = {...data.emoji};\n      let uids = emojiObj[emojiKey];\n\n      if (uids){\n        if(uids.includes(uid)){\n        }else{\n          uids.push(uid)\n        }\n      }else{\n        uids = [uid]\n      }\n\n      emojiObj[emojiKey] = uids\n      chatRef.update({\n        emoji: emojiObj\n      })  \n    })\n  }\n\n  return <div style={{position:'relative'}} className=\"vh100\">\n    <div className=\"flex fdr vh100\">\n      <div className=\"w200 bg_black p16\">\n        <div className=\"color_white flex fdr aic cursor_pointer\" onClick={evt => {logout()}}>\n          <BiLogOut/>\n          <span className=\"color_white pl8\">Logout</span>\n        </div>\n        <div className=\"color_white flex fdr aic cursor_pointer pt16\" onClick={evt => {createChatRoom()}}>\n          <BiCommentAdd/>\n          <span className=\"color_white pl8\">Create New Channel</span>\n        </div>\n      </div>\n      <div className=\"f1 pl16 pt16 pr\">\n        <div style={{height: 'calc(100% - 50px)', overflowY:'scroll', paddingBottom:50,}}>\n        <Chats chats={chats} users={users} uid={uid} onEmojiClick={onEmojiClick}/>   \n        <div style={{ float:\"left\", clear: \"both\" }}\n          ref={messagesEndRef}>\n        </div>\n        </div>\n        <div className=\"posAb\" style={{bottom:16, width:'calc(100% - 32px)', backgroundColor:'#dcdcdc',}}>\n          <div className=\"flex fdr\">   \n            <textarea className=\"default_textarea f1 p8\" \n            placeholder=\"send a message to this channel\"\n            value={chatContent} onChange={evt => {onTextareaChange(evt)}}></textarea>\n          </div>\n          <div className=\"flex jce fdr\">\n            <div className=\"btn btn-success h40 w40\" onClick={evt => addDocument()}><BiSend /></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n}\n\nexport default ChatRoomWithImmer","import React from 'react';\nimport {\n  HashRouter,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport ChatRoom from './pages/ChatRoom';\nimport ChatRoomCreate from './pages/ChatRoomCreate';\nimport Test from './pages/Test';\nimport ChatRoomWithImmer from './pages/ChatRoomWithImmer';\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"/createChat\" component={ChatRoomCreate} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/chat/:channelId\" component={ChatRoom} />\n          <Route exact path=\"/chat_immer/:channelId\" component={ChatRoomWithImmer} />\n          <Route exact path=\"/test\" component={Test} />\n        </Switch>\n      </HashRouter>\n    )\n  }\n}\nexport default Routes;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}